/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WorkAtsantaRouteImport } from './routes/work/@santa'
import { Route as WorkAtportalRouteImport } from './routes/work/@portal'
import { Route as WorkAtabacusRouteImport } from './routes/work/@abacus'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkAtsantaRoute = WorkAtsantaRouteImport.update({
  id: '/work/@santa',
  path: '/work/@santa',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkAtportalRoute = WorkAtportalRouteImport.update({
  id: '/work/@portal',
  path: '/work/@portal',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkAtabacusRoute = WorkAtabacusRouteImport.update({
  id: '/work/@abacus',
  path: '/work/@abacus',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/work/@abacus': typeof WorkAtabacusRoute
  '/work/@portal': typeof WorkAtportalRoute
  '/work/@santa': typeof WorkAtsantaRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/work/@abacus': typeof WorkAtabacusRoute
  '/work/@portal': typeof WorkAtportalRoute
  '/work/@santa': typeof WorkAtsantaRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/work/@abacus': typeof WorkAtabacusRoute
  '/work/@portal': typeof WorkAtportalRoute
  '/work/@santa': typeof WorkAtsantaRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/work/@abacus' | '/work/@portal' | '/work/@santa'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/work/@abacus' | '/work/@portal' | '/work/@santa'
  id: '__root__' | '/' | '/work/@abacus' | '/work/@portal' | '/work/@santa'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WorkAtabacusRoute: typeof WorkAtabacusRoute
  WorkAtportalRoute: typeof WorkAtportalRoute
  WorkAtsantaRoute: typeof WorkAtsantaRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/@santa': {
      id: '/work/@santa'
      path: '/work/@santa'
      fullPath: '/work/@santa'
      preLoaderRoute: typeof WorkAtsantaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/@portal': {
      id: '/work/@portal'
      path: '/work/@portal'
      fullPath: '/work/@portal'
      preLoaderRoute: typeof WorkAtportalRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/work/@abacus': {
      id: '/work/@abacus'
      path: '/work/@abacus'
      fullPath: '/work/@abacus'
      preLoaderRoute: typeof WorkAtabacusRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WorkAtabacusRoute: WorkAtabacusRoute,
  WorkAtportalRoute: WorkAtportalRoute,
  WorkAtsantaRoute: WorkAtsantaRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
